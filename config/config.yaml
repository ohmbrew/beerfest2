#config_version=5

hardware:
  platform: p3_roc
  driverboards: pdb
  servo_controllers: pololu_maestro

# tilt
accelerometers:
  accelerometer:
    number: 1
    level_x: 0
    level_y: 0
    level_z: 0
    hit_limits:
      0.5: accelerometer_hit1x
      1.5: accelerometer_hit2x
    level_limits:
      2: accelerometer_level1x
      5: accelerometer_level2x

# define servo and min/max ranges
pololu_maestro:
  port: /dev/ttyACM0  # lower ttyACMX is the USB command port, higher one is for TTL serial port. We use lower.
  servo_min: 2500
  servo_max: 9700

# define displays
window:
  width: 1846             # width of main LCD: 1366    width of mini LCD: 480     Total: 1846
  height: 800            # height of main LCD: 768   height of mini LCD: 800    Total: 1568
  fullscreen: false
  resizable: false
  borderless: false
  no_window: false
  show_cursor: false
  exit_on_escape: True

# TODO
# - VS video mode - add them on a bike carrying the cup!
# - In MB, prevent VS mode from starting
# - rubber behind strike out to dampen the hit from ball
# - Topper - put string of LEDs in there to light it up like it's filling up. (progressive jackpot maybe?)
# - Adjust difficulty of VS and Theme modes. Carousel maybe? Higher risk higher pts? Increasing pts per shot? Progressive round theme bonuses
# - End theme modes if player hit certain # of shots (e.g. quarters)
# - Add warning flashes to mode/rimrules arrows to warn player ball is exiting. And a sped up sound effect?
# - Ramps build combos, award more points for shots after multiplier increases. Use chance lights maybe?

displays:
  window:
    width: 1846
    height: 800
  main:
    width: 1366
    height: 768
  mini:
    width: 480
    height: 800
    


config:
  - lights.yaml
  - coils.yaml
  - switches.yaml
  - sounds.yaml
  - playervars.yaml

modes:
  - base
  - global
  - field
  - longpour
  - quarters
  - strikeout
  - multiball
  - high_score
  #- tilt
  - skillshot
  - spellbeer
  - spellmunich
  - upf
  - bonusv2
  - volumechug
  - trojankeg
  - dasboot
  - flipperflop
  - popo
  - vs_alltargets
  - vs_breakout

widget_styles:
  attract_mode_high_score_display_label:
    font_size: 60
    font_name: druillet
    anchor_x: left
    anchor_y: top
    x: left + 15
    bold: true
    color: 008ce5ff
  attract_mode_high_score_display_name:
    font_size: 60
    font_name: druillet
    anchor_x: center
    anchor_y: top
    x: center
    bold: true
    color: 008ce5ff
  attract_mode_high_score_display_score:
    font_size: 60
    font_name: druillet
    anchor_x: right
    anchor_y: top
    x: right - 15
    number_grouping: true
    min_digits: 1
    color: 008ce5ff
  bf_blue:
    font_size: 100
    font_name: druillet
    anchor_x: center
    anchor_y: top
    color: 008ce5ff

slides:
  slide_layout:
    target: window
    background_color: black
    widgets:
      - type: display
        source_display: main
        width: 1366
        height: 768
        x: left
        y: top
        anchor_x: left
        anchor_y: top
      - type: display
        source_display: mini
        width: 480
        height: 800
        x: left + 1366
        y: top
        anchor_x: left
        anchor_y: top
  video_seeyoulater_slide:
    widgets:
    - type: image
      image: background-flag
    - type: video
      video: seeyoulater
  video_champions_slide:
    widgets:
    - type: image
      image: background-flag
    - type: video
      video: champions
  final_scores_mini:
    widgets:
    - type: image
      image: beermug7    
    - type: image
      image: minibg  
  final_scores_1p:
    widgets:
    - type: image
      image: background
    - type: text
      text: (player1|score)
      number_grouping: true
      min_digits: 1
      anchor_x: middle
      anchor_y: middle
      x: middle
      y: middle
      font_size: 200
      font_name: druillet
      color: 008ce5
      z: 1
  final_scores_2p:
    widgets:
    - type: image
      image: background
    - type: text
      text: (player1|score)
      number_grouping: true
      min_digits: 1
      anchor_x: left
      anchor_y: top
      x: 10
      y: top - 35
      font_size: 100
      font_name: druillet
      color: 008ce5
      z: 1
    - type: text
      text: (player2|score)
      number_grouping: true
      min_digits: 1
      anchor_x: right
      anchor_y: top
      x: right - 10
      y: top - 35
      font_size: 100
      font_name: druillet
      color: 008ce5
      z: 1
  final_scores_3p:
    widgets:
    - type: image
      image: background
    - type: text
      text: (player1|score)
      number_grouping: true
      min_digits: 1
      anchor_x: left
      anchor_y: top
      x: 10
      y: top - 35
      font_size: 100
      font_name: druillet
      color: 008ce5
      z: 1
    - type: text
      text: (player2|score)
      number_grouping: true
      min_digits: 1
      anchor_x: right
      anchor_y: top
      x: right - 10
      y: top - 35
      font_size: 100
      font_name: druillet
      color: 008ce5
      z: 1
    - type: text
      text: (player3|score)
      number_grouping: true
      min_digits: 1
      anchor_x: left
      anchor_y: bottom
      x: 10
      y: 35
      font_size: 100
      font_name: druillet
      color: 008ce5
      z: 1
  final_scores_4p:
    widgets:
    - type: image
      image: background
    - type: text
      text: (player1|score)
      number_grouping: true
      min_digits: 1
      anchor_x: left
      anchor_y: top
      x: 10
      y: top - 35
      font_size: 100
      font_name: druillet
      color: 008ce5
      z: 1
    - type: text
      text: (player2|score)
      number_grouping: true
      min_digits: 1
      anchor_x: right
      anchor_y: top
      x: right - 10
      y: top - 35
      font_size: 100
      font_name: druillet
      color: 008ce5
      z: 1
    - type: text
      text: (player3|score)
      number_grouping: true
      min_digits: 1
      anchor_x: left
      anchor_y: bottom
      x: 10
      y: 35
      font_size: 100
      font_name: druillet
      color: 008ce5
      z: 1
    - type: text
      text: (player4|score)
      number_grouping: true
      min_digits: 1
      anchor_x: right
      anchor_y: bottom
      x: right-10
      y: 35
      font_size: 100
      font_name: druillet
      color: 008ce5
      z: 1

slide_player:
  mc_ready:
    slide_layout:
      target: window
  gameover_video_complete:
    final_scores_mini:
      target: mini

keyboard:
  s:
    switch: s_start
  1:
    event: pongcup_1
  2:
    event: pongcup_2
  3:
    event: release_cup1
  4:
    event: release_cup2
  b:
    switch: s_flipper_left
  n:
    switch: s_flipper_right

# documentation: https://docs.missionpinball.org/en/latest/hardware/multimorphic/leds.html
p_roc:
  #debug: true
  #trace_bus: true
  pd_led_boards:
    2:
      use_ws281x_0: true
      ws281x_0_first_address: 0
      ws281x_0_last_address: 275

      use_ws281x_2: true
      ws281x_2_first_address: 276
      ws281x_2_last_address: 326

      use_ws281x_1: true
      ws281x_1_first_address: 327
      ws281x_1_last_address: 1041

      

servos:
  servo_diverter:
    number: 5
    
    # these have been visually calibrated and are good
    servo_min: 0.35       # 1105 us, far right
    servo_max: 0.55       # 1480 us, far left
    positions:
      1.0: diverter_left
      0.0: diverter_right  
    reset_position: 0.0
    reset_events: mode_attract_started
    debug: true
  servo_pongtable:
    number: 3
    # these have been visually calibrated and are good
    servo_min: 0.12    # at min, pong cup 1 is at front
    servo_max: 0.87     # at max, pong cup 2 is at front
    positions:
      0.0: pongcup_1
      0.5: pongcup_0
      1.0: pongcup_2
    reset_position: 0.0
    reset_events: machine_reset_phase_3, service_mode_entered

sound_system:
  tracks:
    music:
      type: standard
      simultaneous_sounds: 3
      volume: 1.0
    voice:
      type: standard
      simultaneous_sounds: 3
      volume: 1.0
    sfx:
      type: standard
      simultaneous_sounds: 4
      volume: 1.0
assets:
  sounds:
    default:
      load: on_demand
    music:
      track: music
    sfx:
      track: sfx
    voice:
      track: voice
  videos:
    beerfest_intro1:
      file: BeerfestIntro.mp4

coil_player:
  enable_knocker:
    c_knocker: enable
  disable_knocker:
    c_knocker: disable

drop_targets:
  take_hit:
    switch: s_take_hit
  chug_beer:
    switch: s_chug_beer
  do_shot:
    switch: s_do_shot
drop_target_banks:
  strike_out_bank:
    drop_targets: take_hit, chug_beer, do_shot
    reset_coils: c_strike_out
    reset_on_complete: 1s
    reset_events: strikeout_bank_reset

# have two sets of flipper definitions. One for normal playing, another for when player activates flipperflop mode
flippers:
  # normal
  flipper_left:
    main_coil: c_flipper_left
    activation_switch: s_flipper_left
    enable_events: flippers_normal
    disable_events: flippers_flopped, flippers_disabled, game_ending
  flipper_right:
    main_coil: c_flipper_right
    activation_switch: s_flipper_right
    enable_events: flippers_normal
    disable_events: flippers_flopped, flippers_disabled, game_ending

  # swap flippers during flipperflop mode
  flipper_flopped_left:
    main_coil: c_flipper_left
    activation_switch: s_flipper_right
    enable_events: flippers_flopped
    disable_events: flippers_normal, flippers_disabled, game_ending
  flipper_flopped_right:
    main_coil: c_flipper_right
    activation_switch: s_flipper_left
    enable_events: flippers_flopped
    disable_events: flippers_normal, flippers_disabled, game_ending

  flipper_upper:
    main_coil: c_flipper_upper
    activation_switch: s_flipper_right
    enable_events: flippers_normal
    disable_events: flippers_disabled, game_ending

spinners:
  tavern_spinner:
    switch: s_tavern_spinner
    active_ms: 500

ball_devices:
  bd_drain:
    ball_switches: s_drain
    eject_coil: c_drain_eject
    eject_targets: bd_trough
    eject_timeouts: 2s
    tags: drain
  bd_trough:
    ball_switches: s_trough_eject, s_trough1, s_trough2, s_trough3
    eject_coil: c_trough_eject
    eject_targets: bd_plunger_lane
    tags: home, trough
    eject_timeouts: 2s
    debug: true
  bd_plunger_lane:
    ball_switches: s_plunger_lane
    eject_targets: playfield
    mechanical_eject: true
    eject_timeouts: 5s
    debug: true
  bd_kicker_mode:
    ball_switches: s_kicker_mode
    eject_coil: c_kicker_mode
    eject_timeouts: 1s
  bd_kicker_rimrules:
    ball_switches: s_kicker_rimrules
    eject_coil: c_kicker_rimrules
    eject_timeouts: 1s
  bd_pongcup1:
    ball_switches: s_pongcup1
    eject_coil: c_pongcup1
    eject_timeouts: 2s
  bd_pongcup2:
    ball_switches: s_pongcup2
    eject_coil: c_pongcup2
    eject_timeouts: 2s
  bd_popo:
    ball_switches: s_popo_captured
    eject_coil: c_popo_eject
    eject_timeouts: 2s

ball_holds:
  kicker_mode:
    balls_to_hold: 1
    hold_devices: bd_kicker_mode
    release_one_events: kicker_mode_eject
  kicker_rimrules:
    balls_to_hold: 1
    hold_devices: bd_kicker_rimrules
    release_one_events: kicker_rimrules_eject

# cases where MPF will try to eject from pongcups
# 1. Multiball not running:
#    a. Pongcup1 has ball, Pongcup2 does not -> pongcup_1_release_show. This only moves the pongtable to place pongcup1 in a releaseable position.
#       Continued eject_attempt will release the ball from pongcup1.
#    b. Pongcup1 has ball, Pongcup2 has ball -> pongcup_releaseall_show. Both pongcups will release their balls in the show.
#       Continued eject_attempt logic will still happen, just balls will already be released. s'ok.
# 2. Multiball running
#    a. Pongcup1 has ball, Pongcup2 does not -> pongcup1_release_show. We have already released both balls for multiball, and player has sunk ball in pongcup1.
#       Ensure pongcup1 is in releasable position (run pongcup1_release_show), then allow eject_attempt logic to continue and ball will be released.
#    b. Pongcup1 has ball, Pongcup2 has ball -> pongcup_releaseall_show. Both pongcups will release their balls in the show.
#       Continued eject_attempt logic will still happen, just balls will already be released. s'ok.
queue_relay_player:
  # 1.a above
  balldevice_bd_pongcup1_ball_eject_attempt{device.state_machines.multiball.state != "multiball_running" and device.switches.s_pongcup2.state == 0}:
    post: pongcup_1_release_show
    wait_for: pongcup_1_moved
  # 1.b above
  balldevice_bd_pongcup1_ball_eject_attempt{device.state_machines.multiball.state != "multiball_running" and device.switches.s_pongcup2.state == 1}:
    post: pongcup_all_release_show
    wait_for: pongcups_released
  # 2.a above
  balldevice_bd_pongcup1_ball_eject_attempt{device.state_machines.multiball.state == "multiball_running" and device.switches.s_pongcup2.state == 0}:
    post: pongcup_1_release_show
    wait_for: pongcup_1_moved
  # 2.b above
  balldevice_bd_pongcup1_ball_eject_attempt{device.state_machines.multiball.state == "multiball_running" and device.switches.s_pongcup2.state == 1}:
    post: pongcup_all_release_show
    wait_for: pongcups_released  
  # should only get pongcup2 eject_attempt if we also are ejecting pongcup1 due to multiball. This should already be handled above, now we just wait for it to finish.
  balldevice_bd_pongcup2_ball_eject_attempt:
    post: pongcup_2_waiting_for_releaseall_show_to_finish   # dummy event
    wait_for: pongcups_released   # this waits on pongcup_all_release_show above to finish
  game_ending{device.counters.has_highscore.completed == False}:
    post: drain_gameover_nohighscore
    wait_for: gameover_lastgamescores_complete
  game_ending{device.counters.has_highscore.completed == True}:
    post: drain_gameover_highscore
    wait_for: gameover_lastgamescores_complete 
  
show_player:
  pongcup_all_release_show:
    pongtable_releaseall_show:
      loops: 0
  pongcup_1_release_show:
    pongtable_show:
      show_tokens:
        cup: 1
      loops: 0
  drain_gameover_nohighscore:
    show_gameover_nohighscore:
      loops: 0
  drain_gameover_highscore:
    show_gameover_highscore:
      loops: 0
  gameover_video_complete{game.num_players == 1}:
    show_finalscores_1p:
      loops: 0
  gameover_video_complete{game.num_players == 2}:
    show_finalscores_2p:
      loops: 0
  gameover_video_complete{game.num_players == 3}:
    show_finalscores_3p:
      loops: 0
  gameover_video_complete{game.num_players == 4}:
    show_finalscores_4p:
      loops: 0

shows:
  show_gameover_nohighscore:
    - time: 0
      slides:
        video_seeyoulater_slide:
          target: main
        slide_mini_nohighscore:
          target: mini
          priority: 3000
    - time: '+4.5'
      events: gameover_video_complete
  show_gameover_highscore:
    - time: 0
      slides:
        video_champions_slide:
          target: main
        slide_mini_highscore:
          target: mini
          priority: 3000
    - time: '+6.5'
      events: gameover_video_complete
  show_finalscores_1p:
    - duration: 5
      slides:
        final_scores_1p:
          target: main
      events: play_finalscores_track
    - duration: .1
      events: gameover_lastgamescores_complete
  show_finalscores_2p:
    - duration: 5
      slides:
        final_scores_2p:
          target: main
      events: play_finalscores_track
    - duration: .1
      events: gameover_lastgamescores_complete
  show_finalscores_3p:
    - duration: 5
      slides:
        final_scores_3p:
          target: main
      events: play_finalscores_track
    - duration: .1
      events: gameover_lastgamescores_complete
  show_finalscores_4p:
    - duration: 5
      slides:
        final_scores_4p:
          target: main
      events: play_finalscores_track
    - duration: .1
      events: gameover_lastgamescores_complete

sound_player:
  play_finalscores_track:
    voice_redsolocup:
      action: play
      loops: 0

playfields:
  playfield:
    tags: default
    default_source_device: bd_plunger_lane

counters:
  has_highscore:
    count_events: got_highscore
    count_complete_value: 1
    starting_count: 0
    reset_on_complete: False
    reset_events: game_started

virtual_platform_start_active_switches: s_trough_eject, s_trough1, s_trough2, s_trough3
